@startuml
together {
    class StandardWebServer{
        - port : int
        - registryService : ControllerRegistryService
        - server : WebServer
        + start() : void
    }
    interface WebServer{
        + start() : void
        + stop() : void
        + isRunning() : boolean
    }
    class SunHttpServer
    interface HttpHandler
    class SunHttpHandler{
        + handle(HttpExchange:httpExchange) : void
    }
    class HttpExchange
}

together {
    interface ControllerRegistryService{
        + register() : List<Controller>
    }
    class AnnotationControllerRegistryService{
    }
}
together {
    abstract Controller{
        + process(request:Request) : View
    }
    abstract View{
        + render(model:Model)
    }

    abstract Model
}

together {
    class RequestFactory{
        + create() : Request
    }

    interface Request

    class DefaultRequest
}

class ControllerSelector{
    + select(request:Request) : Controller
}

Controller -> View
Controller -> Model
View -> Model
SunHttpHandler -> HttpExchange
SunHttpHandler -> ControllerSelector
ControllerSelector -> Request
ControllerSelector -> Controller
RequestFactory -> Request
Request <|.. DefaultRequest
HttpHandler <|.. SunHttpHandler
WebServer <|.. SunHttpServer
SunHttpServer -> HttpHandler
ControllerRegistryService <|.. AnnotationControllerRegistryService
StandardWebServer -> ControllerRegistryService
StandardWebServer -> WebServer
ControllerRegistryService -> Controller
HttpHandler -> Controller
@enduml